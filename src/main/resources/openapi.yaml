openapi: 3.0.0
info:
  title: DeviceKeyRegistry API
  description: API for securely registering, approving, disabling, and validating device public keys using JWTs and JWKS URLs.
  version: 1.0.0
paths:
  /v1/devices:
    post:
      summary: Register a new device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDeviceRequest"
      responses:
        200:
          description: Device registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"

  /v1/devices/{deviceId}:
    get:
      summary: Get device information by deviceId
      parameters:
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Device information retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"

  /v1/devices/{deviceId}/status:
    patch:
      summary: Activate or deactivate a device
      parameters:
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchDeviceRequest"
      responses:
        200:
          description: Device activated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"

  /v1/alias/{deviceAlias}:
    get:
      summary: Get devices by deviceAlias
      parameters:
        - in: path
          name: deviceAlias
          required: true
          schema:
            type: string
      responses:
        200:
          description: Devices retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DevicesResponse"

  /v1/pending:
    get:
      summary: Get all pending devices
      responses:
        200:
          description: Pending devices retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DevicesResponse"

components:
  schemas:
    CreateDeviceRequest:
      type: object
      properties:
        deviceAlias:
          type: string
          description: The ID of the device self-reported
        keyType:
          type: string
          description: Type of key supported
          enum: [RS256]
        publicKey:
          type: string
          description: Public key of the device
      required:
        - deviceAlias
        - keyType
        - publicKey
      additionalProperties: false

    PatchDeviceRequest:
      type: object
      properties:
        status:
          type: string
          enum: [ACTIVE, INACTIVE]
      required:
        - status
      additionalProperties: false

    DeviceResponse:
      type: object
      properties:
        deviceId:
          type: string
          format: uuid
        status:
          type: string
          enum: [PENDING, ACTIVE, INACTIVE]
        deviceAlias:
          type: string
        keyType:
          type: string
          enum: [RS256]
        publicKey:
          type: string
      required:
        - deviceId
        - status
        - deviceAlias
        - keyType
        - publicKey
      additionalProperties: false

    DevicesResponse:
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: "#/components/schemas/DeviceResponse"
      additionalProperties: false
